<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0712.0907                               -->
<workbook original-version='18.1' source-build='2021.2.1 (20212.21.0712.0907)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Poultry and Livestock Consumption)' inline='true' name='federated.0wyq1t70o61lfd1bke34q1gdymwu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Poultry and Livestock Consumption' name='excel-direct.1ct09mr02nyi6o14ppe0o06hmlph'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/tejasvishah/Desktop/CGT270-Data/MakeoverMondays/Poultry and Livestock Consumption.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ct09mr02nyi6o14ppe0o06hmlph' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L56:no:A1:L56:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Actual/Forecast' ordinal='1' />
            <column datatype='real' name='Beef' ordinal='2' />
            <column datatype='real' name='Pork' ordinal='3' />
            <column datatype='real' name='Total Red Meat' ordinal='4' />
            <column datatype='real' name='Broilers' ordinal='5' />
            <column datatype='real' name='Other Chicken' ordinal='6' />
            <column datatype='real' name='Total Chicken' ordinal='7' />
            <column datatype='real' name='Turkey' ordinal='8' />
            <column datatype='real' name='Total Poultry' ordinal='9' />
            <column datatype='real' name='Total Red Meat &amp; Poultry' ordinal='10' />
            <column datatype='real' name='Commercial Fish &amp; Shell-Fish' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ct09mr02nyi6o14ppe0o06hmlph' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L56:no:A1:L56:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Actual/Forecast' ordinal='1' />
            <column datatype='real' name='Beef' ordinal='2' />
            <column datatype='real' name='Pork' ordinal='3' />
            <column datatype='real' name='Total Red Meat' ordinal='4' />
            <column datatype='real' name='Broilers' ordinal='5' />
            <column datatype='real' name='Other Chicken' ordinal='6' />
            <column datatype='real' name='Total Chicken' ordinal='7' />
            <column datatype='real' name='Turkey' ordinal='8' />
            <column datatype='real' name='Total Poultry' ordinal='9' />
            <column datatype='real' name='Total Red Meat &amp; Poultry' ordinal='10' />
            <column datatype='real' name='Commercial Fish &amp; Shell-Fish' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L56:no:A1:L56:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_395A8AFFA12C47939D046830ADBBF0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual/Forecast</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Actual/Forecast]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Actual/Forecast</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_395A8AFFA12C47939D046830ADBBF0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Beef</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Beef]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Beef</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_395A8AFFA12C47939D046830ADBBF0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pork</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pork]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Pork</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_395A8AFFA12C47939D046830ADBBF0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Red Meat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Red Meat]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total Red Meat</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_395A8AFFA12C47939D046830ADBBF0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Broilers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Broilers]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Broilers</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_395A8AFFA12C47939D046830ADBBF0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other Chicken</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Other Chicken]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Other Chicken</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_395A8AFFA12C47939D046830ADBBF0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Chicken</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Chicken]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total Chicken</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_395A8AFFA12C47939D046830ADBBF0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Turkey</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Turkey]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Turkey</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_395A8AFFA12C47939D046830ADBBF0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Poultry</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Poultry]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total Poultry</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_395A8AFFA12C47939D046830ADBBF0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Red Meat &amp; Poultry</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Red Meat &amp; Poultry]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total Red Meat &amp; Poultry</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_395A8AFFA12C47939D046830ADBBF0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Commercial Fish &amp; Shell-Fish</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Commercial Fish &amp; Shell-Fish]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Commercial Fish &amp; Shell-Fish</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_395A8AFFA12C47939D046830ADBBF0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Beef]' role='measure' type='quantitative' />
      <column datatype='real' name='[Pork]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total Chicken]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='real' name='[Total Poultry]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Total Red Meat &amp; Poultry]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='real' name='[Total Red Meat]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Turkey]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_395A8AFFA12C47939D046830ADBBF0EA]' role='measure' type='quantitative' />
      <column-instance column='[Beef]' derivation='Sum' name='[sum:Beef:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pork]' derivation='Sum' name='[sum:Pork:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Chicken]' derivation='Sum' name='[sum:Total Chicken:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Red Meat &amp; Poultry]' derivation='Sum' name='[sum:Total Red Meat &amp; Poultry:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Turkey]' derivation='Sum' name='[sum:Turkey:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Total Poultry, Total Red Meat'>
          <field>[Total Poultry]</field>
          <field>[Total Red Meat]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Beef:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Total Red Meat &amp; Poultry:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Turkey:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Total Chicken:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Pork:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_395A8AFFA12C47939D046830ADBBF0EA'>
            <properties context=''>
              <relation connection='excel-direct.1ct09mr02nyi6o14ppe0o06hmlph' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:L56:no:A1:L56:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='string' name='Actual/Forecast' ordinal='1' />
                  <column datatype='real' name='Beef' ordinal='2' />
                  <column datatype='real' name='Pork' ordinal='3' />
                  <column datatype='real' name='Total Red Meat' ordinal='4' />
                  <column datatype='real' name='Broilers' ordinal='5' />
                  <column datatype='real' name='Other Chicken' ordinal='6' />
                  <column datatype='real' name='Total Chicken' ordinal='7' />
                  <column datatype='real' name='Turkey' ordinal='8' />
                  <column datatype='real' name='Total Poultry' ordinal='9' />
                  <column datatype='real' name='Total Red Meat &amp; Poultry' ordinal='10' />
                  <column datatype='real' name='Commercial Fish &amp; Shell-Fish' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>US per Capita consumption of Red Meat vs. Poultry ( 1960-2020)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Poultry and Livestock Consumption)' name='federated.0wyq1t70o61lfd1bke34q1gdymwu' />
          </datasources>
          <datasource-dependencies datasource='federated.0wyq1t70o61lfd1bke34q1gdymwu'>
            <column datatype='real' name='[Beef]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pork]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Chicken]' role='measure' type='quantitative' />
            <column datatype='real' name='[Turkey]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Beef]' derivation='Sum' name='[sum:Beef:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pork]' derivation='Sum' name='[sum:Pork:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Chicken]' derivation='Sum' name='[sum:Total Chicken:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Turkey]' derivation='Sum' name='[sum:Turkey:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Pork:qk]' field-type='quantitative' fold='true' max='0.0' min='80.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Turkey:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Beef:qk]' scope='rows' value='Beef (pounds)' />
            <format attr='title' class='0' field='[federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Pork:qk]' scope='rows' value='Pork (pounds)' />
            <format attr='title' class='0' field='[federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Total Chicken:qk]' scope='rows' value='Chicken (pounds)' />
            <format attr='title' class='0' field='[federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Turkey:qk]' scope='rows' value='Turkey (pounds)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wyq1t70o61lfd1bke34q1gdymwu].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='pane' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Beef:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wyq1t70o61lfd1bke34q1gdymwu].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='pane' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Pork:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wyq1t70o61lfd1bke34q1gdymwu].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='pane' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Total Chicken:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wyq1t70o61lfd1bke34q1gdymwu].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='pane' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Turkey:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wyq1t70o61lfd1bke34q1gdymwu].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='pane' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Beef:qk] + ([federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Pork:qk] + ([federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Total Chicken:qk] + [federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Turkey:qk])))</rows>
        <cols>[federated.0wyq1t70o61lfd1bke34q1gdymwu].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{40C762D3-038E-4854-A5B4-CE652E963075}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0wyq1t70o61lfd1bke34q1gdymwu].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wyq1t70o61lfd1bke34q1gdymwu].[none:Total Red Meat &amp; Poultry:ok]</field>
            <field>[federated.0wyq1t70o61lfd1bke34q1gdymwu].[none:Year:qk]</field>
            <field>[federated.0wyq1t70o61lfd1bke34q1gdymwu].[sum:Beef:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{441750C4-DCEA-42CC-818B-80E2B524350F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      /x/q68l2v/WKlwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
